// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        Int @default(autoincrement()) @unique
  name      String
  email     String
  password  String
  zap       Zap[]
}
model Zap{
  id String @default(uuid()) @id
  triggerId String 
  trigger   Trigger? 
  userId    Int
  user      User @relation(fields: [userId],references: [id])
  actions   Action[]
  zapRuns   ZapRun[]
}

model Trigger {
  id        String @default(uuid()) @id
  zapId     String @unique
  triggerId String
  type      AvailableTriggers @relation(fields:[triggerId],references: [id])
  zap       Zap   @relation(fields: [zapId] , references: [id])

}

model AvailableTriggers {
  id    String @default(uuid()) @id
  name  String
  triggers Trigger[]
}

model Action {
  id String @id @default(uuid())
  zapId String
  actionId String
  zap Zap @relation(fields: [zapId], references: [id])
  type AvailableActions @relation(fields: [actionId],references: [id])
  sortingOrder Int @default(0)
}

model AvailableActions{
  id String @id @default(uuid())
  name String
  actions Action[]

}

model ZapRun{
  id String @id @default(uuid())
  zapId String
  metadata Json
  zap Zap @relation(fields: [zapId],references: [id])
  zapRunOutbox ZapRunOutbox?
}

model ZapRunOutbox{
  id String @id @default(uuid())
  zapRunId String @unique
  zapRun ZapRun @relation(fields: [zapRunId],references: [id])
}

